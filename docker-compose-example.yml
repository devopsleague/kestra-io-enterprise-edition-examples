volumes:
  ee-postgres-data:
    driver: local
  ee-kestra-data:
    driver: local
networks:
  local: {}
services:
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    shm_size: 1g
    ports:
      - "5433:5432"
    volumes:
      - ee-postgres-data:/var/lib/postgresql
    networks:
      - local
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
  ee:
    image: ghcr.io/kestra-io/kestra-ee:latest
    pull_policy: always
    user: "root"
    command: server standalone --worker-thread=128
    volumes:
      - ee-kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    depends_on:
      postgres:
        condition: service_started
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4

        micronaut:
          security:
            token:
              jwt:
                signatures:
                  secret:
                    generator:
                      secret: t0pscrt
        kestra:
          encryption:
            secret-key: t0pscrt
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          secret:
            type: jdbc
            jdbc:
              secret: t0pscrt
          tasks:
            tmpDir:
              path: /tmp/kestra-wd
          url: http://localhost:8080/
          ee:
            tenants:
              enabled: true
            license:
              id: myid
              key: |
                mykey
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - local
# docker login registry.kestra.io --username=licenseId --password=fingerprint
# docker pull registry.kestra.io/docker/kestra-ee:latest
# docker compose up -d
